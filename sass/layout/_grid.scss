/* this "grid.scss" file contains grid system */
.grid-test {
  background-color: black;
}
.row {
  max-width: $grid-width; /*standard*/
  /*trick to center block-level-elements */
  margin: 0 auto; /*TB LR*/
  &:not(:last-child) {
    /* .row:last-child() -> 'not' means except lastchild row*/
    margin-bottom: $gutter-vertical;
  }
  @include clearfix; /*calling mixin*/
  [class^="col-"] {
    /* '^' cap means 'startswith' , it selects all elements that classAttributeValue StartsWith 'col-'*/
    /* class="col- ....." */
    float: left; /*using float creates height problem to child-elements fixthem using "clear"property to parent-element*/
    &:not(:last-child) {
      /* all cols except lastchild column */
      margin-right: $gutter-horizontal;
    }
  }

  .col-1-of-2 {
    width: calc(
      (100% - #{$gutter-horizontal}) / 2
    ); /* In SASS calc() function, #{variableName} syntax mustbe used for variables */
  }
  .col-1-of-3 {
    width: calc((100% - 2 * #{$gutter-horizontal}) / 3);
  }
  .col-2-of-3 {
    width: calc(
      2 * ((100% - 2 * #{$gutter-horizontal}) / 3) + #{$gutter-horizontal}
    );
  }
  .col-1-of-4 {
    width: calc((100% - 3 * #{$gutter-horizontal}) / 4);
  }
  .col-2-of-4 {
    width: calc(
      2 * ((100% - 3 * #{$gutter-horizontal}) / 4) + #{$gutter-horizontal}
    );
  }
  .col-3-of-4 {
    width: calc(
      3 * ((100% - 3 * #{$gutter-horizontal}) / 4) + 2 * #{$gutter-horizontal}
    );
  }
}
