@mixin clearfix {
  /* clearfix adds a Pseudo Element after the Element which then clears the float Problem*/
  &::after {
    content: "";
    display: table; /*standard type for clearfix*/
    clear: both;
  }
}

@mixin absCenter {
  /* absCenter makes the element absolute perfect-center w.r.t to it's parentElement*/
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

/* MEDIA QUERY MANAGER */
/*
0   - 600px  : Phone
600 - 900px  : Tablet portrait
900 - 1200px : Tablet landscape

1200 - 1800px : our Normal styles apply
1800px  +     : Big Desktop
*/

/*
$breakpoint argument choices
- phone
- tab-port
- tab-land
- big-desktop

rem is not working properly in mediaqueries, so use em
1em=16px  */
@mixin respond($breakpoint) {
  @if $breakpoint == phone {
    @media only screen and (max-width: 37.5em) {
      /*600px*/
      @content; /*here passed blockofCode from callingMixin*/
    }
  }
  @if $breakpoint == (tab-port) {
    @media only screen and (max-width: 56.25em) {
      /*900px*/
      @content;
    }
  }
  @if $breakpoint == (tab-land) {
    @media only screen and (max-width: 75em) {
      /*1200px*/
      @content;
    }
  }
  @if $breakpoint == (big-desktop) {
    @media only screen and (min-width: 112.5em) {
      /*1800px*/
      @content;
    }
  }
}

/* calling usage 
@include respond(phone) {
  //blockofcode css properties
}
@include respond(tab-port) {
}
@include respond(tab-land) {
}
@include respond(big-desktop) {
}
*/

/* ORDER responsive design order: BASE+Typography > generalLayout+grid > pageLayout > components*/
