/* importing small Partial scss files to this Main.Scss*/
/* MEDIA QUERY MANAGER */
/*
0   - 600px  : Phone
600 - 900px  : Tablet portrait
900 - 1200px : Tablet landscape

1200 - 1800px : our Normal styles apply
1800px  +     : Big Desktop
*/
/*
$breakpoint argument choices
- phone
- tab-port
- tab-land
- big-desktop

rem is not working properly in mediaqueries, so use em
1em=16px  */
/* calling usage 
@include respond(phone) {
  //blockofcode css properties
}
@include respond(tab-port) {
}
@include respond(tab-land) {
}
@include respond(big-desktop) {
}
*/
/* ORDER responsive design order: BASE+Typography > generalLayout+grid > pageLayout > components*/
/* underscore(_) followed by filename is a filenamingconvertion i.e, it means PartialFile  ex:_variables.scss,_typography.scss 
   normal filename ie., it means MainFile which contains all imports of partialfilescode   ex: main.scss 
*/
/*our file name is "_variables.scss" ,   we can write code here and import it to main file, 
while importing we can mention either "variables.scss" (or) "_variables.scss"
*/
/*this "variables.scss" file contains all the Varaibles */
/*Colors*/
/*Cards flipping colors*/
/* FONT */
/*Grid*/
/*rowgap*/
/*columngap*/
/* this "animation.scss" file contains all the animation of our project*/
@keyframes moveInLeft {
  0% {
    opacity: 0;
    /*not visible*/
    transform: translateX(-10rem); }
  80% {
    transform: translateX(1rem); }
  100% {
    opacity: 1;
    /*visible*/
    transform: translate(0); } }

@keyframes moveInRight {
  0% {
    opacity: 0;
    /*not visible*/
    transform: translateX(10rem); }
  80% {
    transform: translateX(-1rem); }
  100% {
    opacity: 1;
    /*visible*/
    transform: translate(0); } }

@keyframes moveInBottom {
  0% {
    opacity: 0;
    /*invisble*/
    transform: translateY(3rem);
    /*+value means movesDown*/ }
  100% {
    opacity: 1;
    /*visble*/
    transform: translateY(0);
    /*moves back to originalposition*/ } }

/* this "home.scss" file contains all the basic definitions of our Project */
html {
  /*Default rootsize 16px*/
  /* so, 62.5%=10/16px -> 10px */
  font-size: 62.5%;
  /*This defines what 1rem is*/
  scroll-behavior: smooth; }
  @media only screen and (max-width: 75em) {
    html {
      /*1200px*/
      font-size: 56.25%; } }
  @media only screen and (max-width: 56.25em) {
    html {
      /*900px*/
      font-size: 50%; } }
  @media only screen and (min-width: 112.5em) {
    html {
      /*1800px*/
      font-size: 75%; } }

body {
  box-sizing: border-box;
  padding: 3rem;
  /*padding no inheritance*/ }
  @media only screen and (max-width: 56.25em) {
    body {
      /*900px*/
      padding: 0; } }

*,
*::after,
*::before {
  /* bydefault, browsers will add margin padding to htmlelements like h1,.. */
  margin: 0;
  padding: 0;
  box-sizing: inherit;
  /*borders,paddings won't be added to height width of  element*/ }

/*selection psuedoElement activated when user selects an text on our webpage*/
::selection {
  background-color: #55c57a;
  color: #fff; }

/* this file contains all typography */
body {
  font-family: "Lato", sans-serif;
  /* font-size:16px */
  font-weight: 400;
  line-height: 1.7;
  color: #777;
  box-sizing: border-box;
  /*borders,paddings won't be added to height width of  element*/ }

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  backface-visibility: hidden;
  /*fixes little shaking caused by when animation*/
  margin-bottom: 6rem; }
  .heading-primary--main {
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;
    animation-name: moveInLeft;
    animation-duration: 1s;
    animation-timing-function: ease-out;
    /*animation-delay: 3s;
    animation-iteration-count: 3;
  */ }
    @media only screen and (max-width: 37.5em) {
      .heading-primary--main {
        /*600px*/
        letter-spacing: 1rem;
        font-size: 5rem;
        /*here passed blockofCode from callingMixin*/ } }
  .heading-primary--sub {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.75rem;
    animation: moveInRight 1s ease-out;
    /* animation: name duration timing-function delay iteration-count direction fill-mode; */ }
    @media only screen and (max-width: 37.5em) {
      .heading-primary--sub {
        /*600px*/
        letter-spacing: 0.5rem;
        /*here passed blockofCode from callingMixin*/ } }

.heading-secondary {
  font-size: 3.5rem;
  font-weight: 700;
  text-transform: uppercase;
  display: inline-block;
  background-image: linear-gradient(to right, #7ed56f, #28b485);
  background-clip: text;
  -webkit-background-clip: text;
  /*background gets clipped exactly where the TEXT Ends. use, color:transparent then background-grandientcolors applies to Text beautiful*/
  color: transparent;
  letter-spacing: 0.2rem;
  transition: all 0.2s; }
  @media only screen and (max-width: 56.25em) {
    .heading-secondary {
      /*900px*/
      font-size: 3rem; } }
  @media only screen and (max-width: 37.5em) {
    .heading-secondary {
      /*600px*/
      font-size: 2.5rem;
      /*here passed blockofCode from callingMixin*/ } }
  .heading-secondary:hover {
    transform: skewX(15deg) skewY(2deg) scale(1.1);
    /*skew means bending Element*/
    text-shadow: 0.5rem 1rem 2rem rgba(0, 0, 0, 0.2);
    /* x y blur color */ }

.heading-tertiary {
  font-size: 1.6rem;
  font-weight: 700;
  text-transform: uppercase; }

.paragraph {
  font-size: 1.6rem; }
  .paragraph:not(:last-child) {
    margin-bottom: 3rem; }

/* utility classes goal is simply: to do job like text-center. also be reusable */
/* we know utility classes should have highPriority, so we use !important */
.u-center-text {
  text-align: center !important; }

.u-margin-bottom-small {
  margin-bottom: 1.5rem !important; }

.u-margin-bottom-medium {
  margin-bottom: 4rem !important; }
  @media only screen and (max-width: 56.25em) {
    .u-margin-bottom-medium {
      /*900px*/
      margin-bottom: 3rem !important; } }

.u-margin-bottom-big {
  margin-bottom: 8rem !important; }
  @media only screen and (max-width: 56.25em) {
    .u-margin-bottom-big {
      /*900px*/
      margin-bottom: 5rem !important; } }

.u-margin-top-huge {
  margin-top: 10rem !important; }

.u-margin-top-big {
  margin-top: 8rem !important; }

/* button is a reusable component */
.btn {
  font-family: inherit;
  /* visitedState means button already clicked before.*/
  /* activeState means when we clicked it */
  /*Psudeo element for .btn*/
  /* specific Animated Btn*/ }
  .btn, .btn:link, .btn:visited {
    display: inline-block;
    /*this element is considered as like text*/
    padding: 1.5rem 4rem;
    /*tb lr*/
    border-radius: 10rem;
    font-size: 1.6rem;
    text-decoration: none;
    text-transform: uppercase;
    transition: all 0.2s;
    /*hover state transition .btn:hover*/
    position: relative;
    /*parentEl*/
    z-index: 1;
    /*frontLayer*/
    /*Change for the <button> element*/
    border: none;
    cursor: pointer; }
  .btn:hover {
    /* hover state of .btn El*/
    transform: translateY(-3px);
    /*moveup 3px*/
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
    /*x y blur color*/ }
    .btn:hover::after {
      /*hover state of afterPsuedoEl*/
      transform: scaleX(1.4) scaleY(1.6);
      /*increase psuedoBtn size*/
      opacity: 0;
      /*invisble*/ }
  .btn:active, .btn:focus {
    outline: none;
    transform: translateY(-1px);
    /*-ve value means movesUp*/
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2); }
  .btn--white {
    background-color: #fff;
    color: #777; }
    .btn--white::after {
      background-color: #fff; }
  .btn--green {
    background-color: #55c57a;
    color: #fff; }
    .btn--green::after {
      background-color: #55c57a; }
  .btn::after {
    content: "";
    /*this El is childof btn*/
    display: inline-block;
    /*btnEl is blockinline, so PsuedoEl also be blockinline*/
    height: 100%;
    width: 100%;
    border-radius: 10rem;
    position: absolute;
    /*child of .btnEl*/
    top: 0;
    left: 0;
    z-index: -1;
    /*hides psuedoEl to back of btnEl (backLayer)*/
    transition: all 0.4s;
    /*hover state transition for btnAfterEl*/ }
  .btn--white::after {
    background-color: #fff; }
  .btn--animated {
    animation: moveInBottom 0.5s ease-out 0.75s;
    /*name duration time-funct delay*/
    animation-fill-mode: backwards;
    /*styles of 0%frame automatically applies before the animation starts*/ }

.btn-text:link, .btn-text:visited {
  color: #55c57a;
  font-size: 1.6rem;
  display: inline-block;
  text-decoration: none;
  border-bottom: 1px solid #55c57a;
  padding: 3px;
  transition: all 0.2s;
  /*hoverstate animation*/ }

.btn-text:hover {
  /*hover means mousecursor focus on Element*/
  background-color: #55c57a;
  color: #fff;
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.15);
  transform: translateY(-2px);
  /*move little UP*/ }

.btn-text:active {
  /*active means Element 'clicked'*/
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
  transform: translateY(0);
  /*moveback to initial position*/ }

.composition {
  position: relative; }
  .composition__photo {
    width: 55%;
    box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.4);
    position: absolute;
    z-index: 10;
    outline-offset: 2rem;
    /*space between outline and content*/
    transition: all 0.2s;
    /*hover transition*/ }
    @media only screen and (max-width: 56.25em) {
      .composition__photo {
        /*900px*/
        float: left;
        position: relative;
        width: 33.33%;
        box-shadow: 0 1.5rem 3rem rgba(0, 0, 0, 0.2); } }
    .composition__photo--p1 {
      left: 0;
      top: -2rem; }
      @media only screen and (max-width: 56.25em) {
        .composition__photo--p1 {
          /*900px*/
          top: 0;
          transform: scale(1.2); } }
    .composition__photo--p2 {
      right: 0;
      top: 2rem; }
      @media only screen and (max-width: 56.25em) {
        .composition__photo--p2 {
          /*900px*/
          top: -1rem;
          transform: scale(1.3);
          z-index: 15; } }
    .composition__photo--p3 {
      left: 20%;
      top: 10rem; }
      @media only screen and (max-width: 56.25em) {
        .composition__photo--p3 {
          /*900px*/
          top: 1rem;
          left: 0;
          transform: scale(1.1); } }
    .composition__photo:hover {
      transform: scale(1.05) translateY(-0.5rem);
      box-shadow: 0 2.5rem 4rem rgba(0, 0, 0, 0.5);
      outline: 1.5rem solid #55c57a;
      /*similar to 'border'*/
      z-index: 20; }
  .composition:hover .composition__photo:not(:hover) {
    /* non-hovered images should shrink little */
    transform: scale(0.95); }

.feature-box {
  background-color: rgba(255, 255, 255, 0.8);
  font-size: 1.5rem;
  padding: 2.5rem;
  text-align: center;
  border-radius: 3px;
  box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15);
  transition: transform 0.3s;
  /*hover effect*/ }
  @media only screen and (max-width: 56.25em) {
    .feature-box {
      /*900px*/
      padding: 2rem; } }
  .feature-box__icon {
    font-size: 6rem;
    margin-bottom: 0.5rem;
    display: inline-block;
    background-image: linear-gradient(to right, #7ed56f, #28b485);
    background-clip: text;
    -webkit-background-clip: text;
    color: transparent; }
    @media only screen and (max-width: 56.25em) {
      .feature-box__icon {
        /*900px*/
        margin-bottom: 0; } }
  .feature-box:hover {
    transform: translateY(-1.5rem) scale(1.03); }

.card {
  perspective: 150rem;
  /*perspective view distance towards user*/
  -moz-perspective: 150rem;
  position: relative;
  /*parentEl*/
  height: 52rem;
  /*fixing height-lostIssue due to absolute-positioning*/
  /*FRONT SIDE STYLING */
  /*BACK SIDE STYLING */
  /* *************************************** */
  /*Ipad devices won't have  hovereffect since no cursor, so we have show flipping cards all-content in front-side
    'only screen and hover:none' means non-hoverable devices
  */ }
  .card__side {
    /* .card__side */
    height: 52rem;
    transition: all 0.8s ease;
    /*hover effect*/
    position: absolute;
    /*childEl*/
    top: 0;
    left: 0;
    width: 100%;
    /*fixing Element fitonwidth problem caused due to absolutePosition*/
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
    /*backside of card is hidden*/
    border-radius: 3px;
    overflow: hidden;
    /*cardimage is overlapping and borderradiusCurves is not being seen. fixed*/
    box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15); }
    .card__side--front {
      /* .card__side--front */
      background-color: #fff; }
    .card__side--back {
      /* .card__side--back */
      transform: rotateY(180deg); }
      .card__side--back-1 {
        /* .card__side--back-1 */
        background-image: linear-gradient(to right bottom, #ffb900, #ff7730); }
      .card__side--back-2 {
        /* .card__side--back-2 */
        background-image: linear-gradient(to right bottom, #7ed56f, #28b485); }
      .card__side--back-3 {
        /* .card__side--back-3 */
        background-image: linear-gradient(to right bottom, #2998ff, #5643fa); }
  .card:hover .card__side--front {
    /* .card:hover .card__side--front => when we hover on card, belowProperties applies to FrontSideofCard */
    transform: rotateY(-180deg); }
  .card:hover .card__side--back {
    /* .card:hover .card__side--back  => when we hover on card, belowProperties applies to BackSideofCard */
    transform: rotateY(0); }
  .card__picture {
    background-size: cover;
    height: 23rem;
    background-blend-mode: screen;
    /*blend-mode means MIXING imagelayer and bgcolorlayer*/
    -webkit-clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%);
    /*for other browsers support*/
    clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%);
    /*cuts backgroundimage into custom sizes*/
    border-top-left-radius: 3px;
    border-top-right-radius: 3px; }
    .card__picture--1 {
      background-image: linear-gradient(to right bottom, #ffb900, #ff7730), url(../img/nat-5.jpg); }
    .card__picture--2 {
      background-image: linear-gradient(to right bottom, #7ed56f, #28b485), url(../img/nat-6.jpg); }
    .card__picture--3 {
      background-image: linear-gradient(to right bottom, #2998ff, #5643fa), url(../img/nat-7.jpg); }
  .card__heading {
    /* .card__heading */
    font-size: 2.8rem;
    font-weight: 300;
    text-transform: uppercase;
    text-align: right;
    color: #fff;
    position: absolute;
    top: 12rem;
    right: 2rem;
    width: 75%; }
  .card__heading-span {
    /* .card__heading-span */
    padding: 1rem 1.5rem;
    -webkit-box-decoration-break: clone;
    /*all browsers support*/
    box-decoration-break: clone;
    /*box properties apply to each fragment(also multiplelines)*/ }
    .card__heading-span--1 {
      background-image: linear-gradient(to right bottom, rgba(255, 185, 0, 0.85), rgba(255, 119, 48, 0.85)); }
    .card__heading-span--2 {
      background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.85), rgba(40, 180, 133, 0.85)); }
    .card__heading-span--3 {
      background-image: linear-gradient(to right bottom, rgba(41, 152, 255, 0.85), rgba(86, 67, 250, 0.85)); }
  .card__details {
    padding: 3rem; }
    .card__details ul {
      list-style: none;
      width: 80%;
      margin: 0 auto; }
      .card__details ul li {
        text-align: center;
        font-size: 1.5rem;
        padding: 1rem; }
        .card__details ul li:not(:last-child) {
          /* except last ListItem, apply below property to allItems*/
          border-bottom: 1px solid #eee; }
  .card__cta {
    position: absolute;
    /*center align*/
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    /*perfect center align*/
    width: 90%;
    text-align: center; }
  .card__price-box {
    text-align: center;
    color: #fff;
    margin-bottom: 8rem; }
  .card__price-only {
    font-size: 1.4rem;
    text-transform: uppercase; }
  .card__price-value {
    font-size: 6rem;
    font-weight: 100; }
  @media only screen and (max-width: 56.25em), only screen and (hover: none) {
    .card {
      height: auto;
      /*fixing height-lostIssue due to absolute-positioning*/
      border-radius: 3px;
      background-color: #fff;
      box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15);
      /*FRONT SIDE STYLING */
      /*BACK SIDE STYLING */ }
      .card__side {
        /* .card__side */
        height: auto;
        position: relative;
        /*childEl*/
        box-shadow: none; }
        .card__side--back {
          /* .card__side--back */
          transform: rotateY(0);
          clip-path: polygon(0 15%, 100% 0, 100% 100%, 0 100%); }
      .card:hover .card__side--front {
        /* .card:hover .card__side--front => when we hover on card, belowProperties applies to FrontSideofCard */
        transform: rotateY(0); }
      .card__details {
        /*.card__details*/
        padding: 1rem 3rem; }
      .card__cta {
        position: relative;
        /*center align*/
        top: 0;
        left: 0;
        transform: translate(0);
        /*perfect center align*/
        width: 100%;
        padding: 7rem 4rem 4rem 4rem; }
      .card__price-box {
        margin-bottom: 3rem; }
      .card__price-value {
        font-size: 4rem; } }

.story {
  width: 75%;
  margin: 0 auto;
  box-shadow: 0 3rem 6rem rgba(0, 0, 0, 0.1);
  background-color: rgba(255, 255, 255, 0.6);
  border-radius: 3px;
  padding: 6rem;
  padding-left: 9rem;
  font-size: 1.6rem;
  transform: skewX(-12deg);
  /*bend position*/ }
  @media only screen and (max-width: 56.25em) {
    .story {
      /*900px*/
      width: 100%;
      padding: 4rem;
      padding-left: 7rem; } }
  @media only screen and (max-width: 37.5em) {
    .story {
      /*600px*/
      transform: skewX(0);
      /*bend position*/
      /*here passed blockofCode from callingMixin*/ } }
  .story__shape {
    width: 15rem;
    height: 15rem;
    float: left;
    transform: translateX(-3rem) skewX(12deg);
    /*don't use margins for floatedElement, instead use translateFunc to givespace*/
    position: relative;
    /*parentEl of captionEl*/
    overflow: hidden;
    border-radius: 50%;
    /*if browser supports property, then only below applies*/ }
    @supports (clip-path: circle(50% at 50% 50%)) or (-webkit-clip-path: circle(50% at 50% 50%)) {
      .story__shape {
        -webkit-clip-path: circle(50% at 50% 50%);
        clip-path: circle(50% at 50% 50%);
        -webkit-shape-outside: circle(50% at 50% 50%);
        shape-outside: circle(50% at 50% 50%);
        /*text-flow in shape direction*/
        border-radius: none; } }
    @media only screen and (max-width: 37.5em) {
      .story__shape {
        /*600px*/
        transform: translateX(-3rem) skewX(0);
        /*bend position*/
        /*here passed blockofCode from callingMixin*/ } }
  .story__img {
    height: 100%;
    transform: translateX(-4rem) scale(1.4);
    /*before-hovereffect scaled-up to big*/
    backface-visibility: hidden;
    /*fixing animation shakiness*/
    transform: all 0.5s;
    /*hover-effect transition*/ }
  .story__caption {
    color: #fff;
    font-size: 1.7rem;
    text-align: center;
    text-transform: uppercase;
    position: absolute;
    /*childEl of shapeEl*/
    top: 50%;
    left: 50%;
    transform: translate(-50%, 20%);
    opacity: 0;
    /*before-hovereffect invisible*/
    transition: all 0.5s;
    backface-visibility: hidden;
    /*fixing animation shakiness*/ }
  .story__text {
    transform: skewX(12deg);
    /*bend to normalPosition*/ }
    @media only screen and (max-width: 37.5em) {
      .story__text {
        /*600px*/
        transform: skewX(0);
        /*here passed blockofCode from callingMixin*/ } }
  .story:hover .story__caption {
    /*.story:hover .story__caption   => when hovering on story, Image-CaptionText should comeup and visible*/
    opacity: 1;
    /*visible*/
    transform: translate(-50%, -50%);
    /*move to Vcenter Hcenter*/ }
  .story:hover .story__img {
    /*.story:hover .story__img  => when hovering on story, Image should comeback to normalsize(scaledown)*/
    transform: translateX(-4rem) scale(1);
    /*scale-down to normalsize*/
    filter: blur(3px) brightness(80%); }

.bg-video {
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  z-index: -1;
  opacity: 0.15; }
  .bg-video__content {
    height: 100%;
    width: 100%;
    object-fit: cover;
    /*similar to background-size:cover*/ }

.form {
  /*Radio buttons Styling*/ }
  .form__group:not(:last-child) {
    /* .form__group:not(:last-child) means "select all childs(.form__group) except lastchildElement" */
    margin-bottom: 2rem; }
  .form__input {
    font-size: 1.5rem;
    font-family: inherit;
    /*fixing inputEls default family*/
    color: inherit;
    /*fixing inputEls default color*/
    padding: 1.5rem 2rem;
    border-radius: 2px;
    background-color: rgba(255, 255, 255, 0.5);
    border: none;
    border-bottom: 3px solid transparent;
    /*fixing elementborderincrease sudden in focus state*/
    width: 90%;
    display: block;
    transition: all 0.3s;
    /*focus state effect*/ }
    @media only screen and (max-width: 56.25em) {
      .form__input {
        /*900px*/
        width: 100%; } }
    .form__input:focus {
      outline: none;
      /*removingdefault outline*/
      box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.1);
      border-bottom: 3px solid #55c57a;
      /*element border*/ }
    .form__input:focus:invalid {
      /* .form__input:focus:invalid  means "input have 2 states are valid,invalid" we can apply different styles to them*/
      border-bottom: 3px solid #ff7730; }
    .form__input::-webkit-input-placeholder {
      /* .form__input::placeholder */
      color: #999; }
  .form__label {
    font-size: 1.2rem;
    font-weight: 700;
    margin-left: 2rem;
    margin-top: 0.7rem;
    display: block;
    transition: all 0.3s;
    /*fading-in move effect placeholder*/ }
  .form__input:placeholder-shown + .form__label {
    /* .form__input:placeholder-shown + .form__label   
        "+" is called SIBILING SELECTOR. used to select adjacentChildEl
        when placeholder is shown in InputField, so we want label to be hidden
    */
    opacity: 0;
    visibility: hidden;
    transform: translateY(-4rem); }
  .form__radio-group {
    /* .form__radio-group */
    width: 49%;
    display: inline-block;
    /*inline-block-elements arranges sideBySide*/ }
    @media only screen and (max-width: 56.25em) {
      .form__radio-group {
        /*900px*/
        width: 100%;
        margin-bottom: 2rem; } }
  .form__radio-input {
    display: none;
    /*hiding default-radio-button, since we made our custom-radio-button*/ }
  .form__radio-label {
    /* .form__radio-label */
    font-size: 1.6rem;
    cursor: pointer;
    /* HandIconCursor on element*/
    position: relative;
    /*parentEl of span Custom-radio-button*/
    padding-left: 4.5rem; }
  .form__radio-button {
    height: 3rem;
    width: 3rem;
    border: 5px solid #55c57a;
    border-radius: 50%;
    display: inline-block;
    /*above properties not Works for inline-elements only*/
    position: absolute;
    /*childEl of labelEl*/
    left: 0;
    top: -0.4rem; }
    .form__radio-button::after {
      content: "";
      display: block;
      height: 1.3rem;
      width: 1.3rem;
      border-radius: 50%;
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      background-color: #55c57a;
      opacity: 0;
      /*hiding not visible*/
      transition: opacity 0.2s; }
  .form__radio-input:checked ~ .form__radio-label .form__radio-button::after {
    /*when we ClicK radioInputElement, it is checked. then, we select its sibiling and then its child*/
    /* "~" tilda is used to SELECT CHILD. */
    opacity: 1;
    /* visible */ }

/* Popup box is shown when  User clicks on booknow Button in adventures cards.*/
.popup {
  height: 100vh;
  width: 100%;
  background-color: rgba(0, 0, 0, 0.8);
  position: fixed;
  top: 0;
  left: 0;
  z-index: 9999;
  /* default popup is hidden, shows when button clicked */
  opacity: 0;
  /*hides*/
  visibility: hidden;
  /*not accessible*/
  transition: all 0.3s;
  /*target state*/
  /*if browser supports backdrop-filter property, then inside block of code gets applies*/
  /* Open states */
  /*close-icon*/ }
  @supports (-webkit-backdrop-filter: blur(10px)) or (backdrop-filter: blur(10px)) {
    .popup {
      /*block of code*/
      backdrop-filter: blur(10px); } }
  .popup__content {
    /* .popup__content */
    width: 75%;
    background-color: #fff;
    box-shadow: 0 2rem 4rem rgba(0, 0, 0, 0.2);
    border-radius: 3px;
    /* absCenter makes the element absolute perfect-center w.r.t to it's parentElement*/
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    /*calling mixin function to centerElement*/
    display: table;
    overflow: hidden;
    /*fixed-images overlap with container and border-radius-curves not visible*/
    /* small-animation-effect from default to target-state */
    opacity: 0;
    transform: translate(-50%, -50%) scale(0.25);
    transition: all 0.5s 0.2s;
    /*name duration delay*/ }
  .popup__left {
    /* .popup__left */
    width: 34%;
    display: table-cell; }
  .popup__right {
    /* .popup__right */
    width: 66%;
    display: table-cell;
    vertical-align: middle;
    padding: 3rem 5rem; }
  .popup__img {
    /* .popup__img */
    display: block;
    width: 100%; }
  .popup__text {
    /* .popup__text */
    font-size: 1.4rem;
    margin-bottom: 4rem;
    column-count: 2;
    column-gap: 4rem;
    column-rule: 1px solid #eee;
    -moz-hyphens: auto;
    -webkit-hyphens: auto;
    hyphens: auto; }
  .popup:target {
    /* 'Target' psuedoElement is Activated, when user Click element(clickedElement should have "href" attributevalue of this POPUP) */
    opacity: 1;
    visibility: visible; }
  .popup:target .popup__content {
    /* when button is clicked*/
    opacity: 1;
    transform: translate(-50%, -50%) scale(1); }
  .popup__close {
    /* .popup__close means closeIcon*/ }
    .popup__close:link, .popup__close:visited {
      color: #777;
      font-size: 3rem;
      text-decoration: none;
      display: inline-block;
      line-height: 1;
      position: absolute;
      top: 2.5rem;
      right: 2.5rem;
      transition: all 0.2s;
      /*hover state*/ }
    .popup__close:hover {
      color: #55c57a; }

/* ******************** */
/* This is not a good practise */
/* Testing POPUP-component for responsive "710px" */
@media (max-width: 710px) {
  .popup__content {
    display: flex;
    flex-direction: column;
    padding: 1rem 0; }
  .popup__left {
    display: flex;
    justify-content: center;
    width: 90%; }
  .popup__right {
    display: block;
    padding: 0 1rem;
    width: 100%;
    text-align: center; }
    .popup__right h2,
    .popup__right h3 {
      margin-bottom: 0 !important; }
  .popup__img {
    display: inline-block;
    width: 100px;
    height: 100px;
    margin-right: 1rem; }
  .popup__text {
    display: block;
    column-count: 1;
    column-gap: 0;
    column-rule: 0;
    margin-bottom: 1rem; }
  .popup__close {
    /* .popup__close means closeIcon*/ }
    .popup__close:link, .popup__close:visited {
      top: 1rem; } }

/* this "grid.scss" file contains grid system */
.grid-test {
  background-color: black; }

.row {
  max-width: 114rem;
  /*standard*/
  /*trick to center block-level-elements */
  margin: 0 auto;
  /*TB LR*/
  /* clearfix adds a Pseudo Element after the Element which then clears the float Problem*/
  /*calling mixin*/ }
  .row:not(:last-child) {
    /* .row:last-child() -> 'not' means except lastchild row*/
    margin-bottom: 8rem; }
    @media only screen and (max-width: 56.25em) {
      .row:not(:last-child) {
        /*900px*/
        margin-bottom: 6rem; } }
  @media only screen and (max-width: 56.25em) {
    .row {
      /*900px*/
      max-width: 50rem;
      padding: 0 3rem; } }
  .row::after {
    content: "";
    display: table;
    /*standard type for clearfix*/
    clear: both; }
  .row [class^="col-"] {
    /* '^' cap means 'startswith' , it selects all elements that classAttributeValue StartsWith 'col-'*/
    /* class="col- ....." */
    float: left;
    /*using float creates height problem to child-elements fixthem using "clear"property to parent-element*/ }
    .row [class^="col-"]:not(:last-child) {
      /* all cols except lastchild column */
      margin-right: 6rem; }
      @media only screen and (max-width: 56.25em) {
        .row [class^="col-"]:not(:last-child) {
          /*900px*/
          margin-right: 0;
          margin-bottom: 6rem; } }
    @media only screen and (max-width: 56.25em) {
      .row [class^="col-"] {
        /*900px*/
        width: 100% !important; } }
  .row .col-1-of-2 {
    width: calc( (100% - 6rem) / 2);
    /* In SASS calc() function, variableName syntax mustbe used for variables */ }
  .row .col-1-of-3 {
    width: calc((100% - 2 * 6rem) / 3); }
  .row .col-2-of-3 {
    width: calc( 2 * ((100% - 2 * 6rem) / 3) + 6rem); }
  .row .col-1-of-4 {
    width: calc((100% - 3 * 6rem) / 4); }
  .row .col-2-of-4 {
    width: calc( 2 * ((100% - 3 * 6rem) / 4) + 6rem); }
  .row .col-3-of-4 {
    width: calc( 3 * ((100% - 3 * 6rem) / 4) + 2 * 6rem); }

/* we are not gonna treat HEADER as a component. because, In Multi-Pages website there will be Header for everyPage. So, it is a Layout*/
.header {
  height: 85vh;
  /*frontside we need gradientcolor with opacity0.8, backside we need backgroundimg*/
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(../img/hero-small.jpg);
  /*go back from css,then go to img,pick image*/
  background-size: cover;
  background-position: top;
  /*bg-image stays topofcontainer always fixed(wont crop)*/
  position: relative;
  /*parentEl of logobox*/
  /*if browser supports then below blockofcode gets applies*/
  /* ***OPTIMIZATION***use Big-resolution-image if DPI is 2x  Retinal display, else use above default smallres-image*/ }
  @supports (clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%)) or (-webkit-clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%)) {
    .header {
      /*block of code*/
      -webkit-clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
      clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
      height: 95vh; } }
  @media only screen and (min-resolution: 192dpi) and (min-width: 37.5em), only screen and (-webkit-min-device-pixel-ratio: 2) and (min-width: 37.5em), only screen and (min-width: 125em) {
    .header {
      background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(../img/hero.jpg); } }
  @media only screen and (max-width: 37.5em) {
    .header {
      /*600px*/
      clip-path: polygon(0 0, 100% 0, 100% 85vh, 0 100%);
      /*here passed blockofCode from callingMixin*/ } }
  .header__logo-box {
    /* '&' means '.header' */
    position: absolute;
    top: 4rem;
    left: 4rem; }
  .header__logo {
    height: 3.5rem;
    /*height value is enough. browser will calculate WIDTH automatic*/ }
  .header__text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    /*perfect positioning textbox*/
    transform: translate(-50%, -50%);
    /*x,y*/
    text-align: center; }

.footer {
  background-color: #333;
  padding: 10rem 0;
  font-size: 1.4rem;
  color: #f7f7f7; }
  @media only screen and (max-width: 56.25em) {
    .footer {
      /*900px*/
      padding: 8rem 0; } }
  .footer__logo-box {
    /* .footer__logo-box */
    text-align: center;
    margin-bottom: 8rem; }
    @media only screen and (max-width: 56.25em) {
      .footer__logo-box {
        /*900px*/
        margin-bottom: 6rem; } }
  .footer__logo {
    /* .footer__logo */
    width: 15rem;
    height: auto; }
  .footer__navigation {
    /* .footer__navigation */
    border-top: 1px solid #777;
    padding-top: 2rem;
    display: inline-block;
    /*occupies required content-width only*/ }
    @media only screen and (max-width: 56.25em) {
      .footer__navigation {
        /*900px*/
        width: 100%;
        text-align: center; } }
  .footer__list {
    /* .footer__list */
    list-style: none; }
  .footer__item {
    /* .footer_item */
    display: inline-block; }
    .footer__item:not(:last-child) {
      /* .footer__item:not(:last-child) means "all ChildElements(items) except LastChildElement" */
      margin-right: 1.5rem; }
  .footer__link {
    /* .footer__link */ }
    .footer__link:link, .footer__link:visited {
      /* link,visited states */
      color: #f7f7f7;
      background-color: #333;
      text-decoration: none;
      text-transform: uppercase;
      display: inline-block;
      transition: all 0.2s;
      /*hover effect*/ }
    .footer__link:hover, .footer__link:active {
      /* hover,active states */
      color: #55c57a;
      box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.4);
      transform: rotate(5deg) scale(1.3); }
  .footer__copyright {
    /* .footer__copyright */
    color: inherit;
    border-top: 1px solid #777;
    padding-top: 2rem;
    width: 80%;
    float: right; }
    @media only screen and (max-width: 56.25em) {
      .footer__copyright {
        /*900px*/
        width: 100%;
        float: none; } }

.navigation {
  /* *************************************** */
  /* FUNCTIONALITY */
  /* CHECKBOX HACK for Navigation open and close*/
  /* when we hit navbutton then check box is selected, again click means unselected*/
  /* ICON ownHandMade for navbar*/
  /* ***Horizontal-bar*** */
  /* hovering on navbar button, make Icon(horizontalspace increase before,after psuedoElements) */
  /* ***Cross-Icon (x)*** */ }
  .navigation__checkbox {
    /* .navigation__checkbox */
    display: none; }
  .navigation__button {
    /* .navigation__button */
    background-color: #fff;
    height: 7rem;
    width: 7rem;
    box-shadow: 0 1rem 3rem rgba(0, 0, 0, 0.1);
    position: fixed;
    top: 6rem;
    right: 6rem;
    border-radius: 50%;
    z-index: 200;
    text-align: center;
    cursor: pointer; }
    @media only screen and (max-width: 56.25em) {
      .navigation__button {
        /*900px*/
        top: 4rem;
        right: 4rem; } }
    @media only screen and (max-width: 37.5em) {
      .navigation__button {
        /*600px*/
        top: 3rem;
        right: 3rem;
        /*here passed blockofCode from callingMixin*/ } }
  .navigation__background {
    /* .navigation__background  means "backgroundCircle" of NavBar-Button*/
    height: 6rem;
    width: 6rem;
    border-radius: 50%;
    position: fixed;
    /*similar to absolute-position*/
    top: 6.5rem;
    right: 6.5rem;
    background-image: radial-gradient(#7ed56f, #28b485);
    z-index: 100;
    /*default NavbarBackground should be hidden, until we click button*/
    transition: transform 0.8s cubic-bezier(0.86, 0, 0.07, 1);
    /*navbar-background-animation-effect openClose time*/ }
    @media only screen and (max-width: 56.25em) {
      .navigation__background {
        /*900px*/
        top: 4.5rem;
        right: 4.5rem; } }
    @media only screen and (max-width: 37.5em) {
      .navigation__background {
        /*600px*/
        top: 3.5rem;
        right: 3.5rem;
        /*here passed blockofCode from callingMixin*/ } }
  .navigation__nav {
    /* .navigation__nav */
    height: 100vh;
    width: 100%;
    position: fixed;
    top: 0;
    left: 0;
    z-index: 150;
    /*default Navbar should be hidden, until we click button */
    opacity: 0;
    /*invisible*/
    width: 0;
    /*links invisible but clickable, so removing width makes them no more clickable*/
    transition: all 0.8s cubic-bezier(0.68, -0.55, 0.265, 1.55);
    /*navbar show-hide animationEffect time*/ }
  .navigation__list {
    /* .navigation__list */
    list-style: none;
    text-align: center;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    /*perfect center alignment*/
    width: 100%; }
  .navigation__item {
    /* .navigation__item */
    margin: 1rem; }
  .navigation__link {
    /* .navigation__link */ }
    .navigation__link:link, .navigation__link:visited {
      display: inline-block;
      font-size: 3rem;
      font-weight: 300;
      text-decoration: none;
      text-transform: uppercase;
      padding: 1rem 2rem;
      color: #fff;
      /* my sliding box animation */
      background-image: linear-gradient(120deg, transparent 0%, transparent 50%, #fff 50%);
      background-size: 250%;
      transition: all 0.4s;
      /*hover effect*/ }
      .navigation__link:link span, .navigation__link:visited span {
        display: inline-block;
        margin-right: 1.5rem; }
    .navigation__link:hover, .navigation__link:active {
      background-position: 100%;
      /*color-changing effect boxmovedleft*/
      color: #55c57a;
      transform: translateX(1rem);
      /*little move right*/ }
  .navigation__checkbox:checked ~ .navigation__background {
    /* if checkbox is clicked means selected*/
    transform: scale(80);
    /*navbar background show*/ }
  .navigation__checkbox:checked ~ .navigation__nav {
    /* if checkbox is clicked means selected*/
    opacity: 1;
    /*navbar visible show*/
    width: 100%;
    /*accesible links*/ }
  .navigation__icon {
    /* .navigation__icon */
    position: relative;
    /*parentEl of before,after psuedoEls*/
    margin-top: 3.5rem;
    /* Horizontal-Icon */ }
    .navigation__icon, .navigation__icon::before, .navigation__icon::after {
      width: 3rem;
      height: 2px;
      background-color: #333;
      display: inline-block; }
    .navigation__icon::before, .navigation__icon::after {
      content: "";
      position: absolute;
      /*childEl of navigationIconEl*/
      left: 0;
      transition: all 0.2s;
      /*hover effect*/ }
    .navigation__icon::before {
      top: -0.8rem;
      /*moveup*/ }
    .navigation__icon::after {
      top: 0.8rem;
      /*movedown*/ }
  .navigation__button:hover .navigation__icon::before {
    top: -1rem; }
  .navigation__button:hover .navigation__icon::after {
    top: 1rem; }
  .navigation__checkbox:checked + .navigation__button .navigation__icon {
    /* .navigation__checkbox:checked .navigation__button .navigation__icon */
    /* when checkbox/navbutton is clicked/selected, then we select brother BUTTON, then we select button's child is ICON*/
    background-color: transparent; }
  .navigation__checkbox:checked + .navigation__button .navigation__icon::before {
    /* when checkbox is selected,  beforePsuedoEl icon styling */
    top: 0;
    transform: rotate(135deg); }
  .navigation__checkbox:checked + .navigation__button .navigation__icon::after {
    /* when checkbox is selected,  afterPsuedoEl icon styling */
    top: 0;
    transform: rotate(-135deg); }

.section-about {
  background-color: #f7f7f7;
  padding: 25rem 0;
  margin-top: -20vh;
  /* -ve means Element -ve direction, matching with headerLeftoverDesignCut*/ }
  @media only screen and (max-width: 56.25em) {
    .section-about {
      /*900px*/
      padding: 20rem 0; } }

.section-features {
  padding: 20rem 0;
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(../img/nat-4.jpg);
  /*go back from css,then go to img,pick image*/
  background-size: cover;
  transform: skewY(-7deg);
  /*container bendingUp */
  margin-top: -10rem; }
  .section-features > * {
    /* .section-featues > *  
      all directchilds(>*) of section-feature back to  normal skewposition
    */
    transform: skewY(7deg); }
  @media only screen and (max-width: 56.25em) {
    .section-features {
      /*900px*/
      padding: 10rem 0; } }

.section-tours {
  background-color: #f7f7f7;
  padding: 25rem 0 15rem 0;
  margin-top: -10rem; }
  @media only screen and (max-width: 56.25em) {
    .section-tours {
      /*900px*/
      padding: 20rem 0 10rem 0; } }

.section-stories {
  padding: 15rem 0;
  position: relative;
  /*parentEl of bg-video*/ }
  @media only screen and (max-width: 56.25em) {
    .section-stories {
      /*900px*/
      padding: 10rem 0; } }

.section-book {
  padding: 15rem 0;
  background-image: linear-gradient(to right bottom, #7ed56f, #28b485); }
  @media only screen and (max-width: 56.25em) {
    .section-book {
      /*900px*/
      padding: 10rem 0; } }

.book {
  background-image: linear-gradient(105deg, rgba(255, 255, 255, 0.9) 0%, rgba(255, 255, 255, 0.9) 50%, transparent 50%), url(../img/nat-10.jpg);
  /* deg means gradient-direction, percentages means the specific-color applies to gradient from that specific point*/
  background-size: 100%;
  border-radius: 3px;
  box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.2); }
  @media only screen and (max-width: 75em) {
    .book {
      /*1200px*/
      background-image: linear-gradient(105deg, rgba(255, 255, 255, 0.9) 0%, rgba(255, 255, 255, 0.9) 65%, transparent 65%), url(../img/nat-10.jpg);
      background-size: cover; } }
  @media only screen and (max-width: 56.25em) {
    .book {
      /*900px*/
      background-image: linear-gradient(to right, rgba(255, 255, 255, 0.9) 0%, rgba(255, 255, 255, 0.9) 100%), url(../img/nat-10.jpg); } }
  .book__form {
    width: 50%;
    padding: 6rem; }
    @media only screen and (max-width: 75em) {
      .book__form {
        /*1200px*/
        width: 65%; } }
    @media only screen and (max-width: 56.25em) {
      .book__form {
        /*900px*/
        width: 100%; } }

/* Sassy CSS Syntax code. also normalCSS code works here  */
/* COLORS- Lightgreen: #7ed56f Mediumgreen: #55c57a Darkgreen: #28b485  */
/* This "main.scss" file contains all the code which are imported, more 
*/
